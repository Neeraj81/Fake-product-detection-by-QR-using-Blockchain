<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='StatewiseTestingDetails' inline='true' name='federated.1w6c0650bqyz7819syd5d0lmrkxk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='StatewiseTestingDetails' name='textscan.0zx8fbd02qhrut1adkvur0hnppxg'>
            <connection class='textscan' directory='C:/Users/hp/Desktop/Data Set-II' filename='StatewiseTestingDetails.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0zx8fbd02qhrut1adkvur0hnppxg' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='TotalSamples' ordinal='2' />
            <column datatype='integer' name='Negative' ordinal='3' />
            <column datatype='real' name='Positive' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0zx8fbd02qhrut1adkvur0hnppxg' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='TotalSamples' ordinal='2' />
            <column datatype='integer' name='Negative' ordinal='3' />
            <column datatype='real' name='Positive' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_DDBBABD2B31A4D8B9984957180D1DC57]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_DDBBABD2B31A4D8B9984957180D1DC57]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalSamples</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalSamples]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>TotalSamples</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_DDBBABD2B31A4D8B9984957180D1DC57]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Negative]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Negative</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_DDBBABD2B31A4D8B9984957180D1DC57]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Positive]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Positive</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StatewiseTestingDetails.csv_DDBBABD2B31A4D8B9984957180D1DC57]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% positive ' datatype='real' name='[Calculation_925489782184370179]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Positive])/SUM([TotalSamples]))*100' />
      </column>
      <column datatype='integer' name='[Negative]' role='measure' type='quantitative' />
      <column datatype='real' name='[Positive]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Samples' datatype='real' name='[TotalSamples]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='StatewiseTestingDetails.csv' datatype='table' name='[__tableau_internal_object_id__].[StatewiseTestingDetails.csv_DDBBABD2B31A4D8B9984957180D1DC57]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[StatewiseTestingDetails.csv_DDBBABD2B31A4D8B9984957180D1DC57]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:StatewiseTestingDetails.csv_DDBBABD2B31A4D8B9984957180D1DC57:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Negative]' derivation='Sum' name='[sum:Negative:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalSamples]' derivation='Sum' name='[sum:TotalSamples:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_925489782184370179]' derivation='User' name='[usr:Calculation_925489782184370179:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:Positive:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1w6c0650bqyz7819syd5d0lmrkxk].[usr:Calculation_925489782184370179:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1w6c0650bqyz7819syd5d0lmrkxk].[__tableau_internal_object_id__].[cnt:StatewiseTestingDetails.csv_DDBBABD2B31A4D8B9984957180D1DC57:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:Negative:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:TotalSamples:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='StatewiseTestingDetails.csv' id='StatewiseTestingDetails.csv_DDBBABD2B31A4D8B9984957180D1DC57'>
            <properties context=''>
              <relation connection='textscan.0zx8fbd02qhrut1adkvur0hnppxg' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='real' name='TotalSamples' ordinal='2' />
                  <column datatype='integer' name='Negative' ordinal='3' />
                  <column datatype='real' name='Positive' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='covid_19_india' inline='true' name='federated.1hvdnk305f550c13jz6ij02zpy2v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_india' name='textscan.1xbjx7n1gg5ghj18w9at100c8czs'>
            <connection class='textscan' directory='C:/Users/hp/Desktop/Data Set-II' filename='covid_19_india.csv' password='' server='' />
          </named-connection>
          <named-connection caption='StatewiseTestingDetails' name='textscan.11hedyj1tc1ker1gdco541upytpk'>
            <connection class='textscan' directory='C:/Users/hp/Desktop/Data Set-II' filename='StatewiseTestingDetails.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1xbjx7n1gg5ghj18w9at100c8czs' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1xbjx7n1gg5ghj18w9at100c8czs' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_2BB741A699984BE0A95FFF2CDA1017B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_2BB741A699984BE0A95FFF2CDA1017B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_2BB741A699984BE0A95FFF2CDA1017B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_2BB741A699984BE0A95FFF2CDA1017B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_2BB741A699984BE0A95FFF2CDA1017B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_2BB741A699984BE0A95FFF2CDA1017B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_2BB741A699984BE0A95FFF2CDA1017B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_2BB741A699984BE0A95FFF2CDA1017B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_2BB741A699984BE0A95FFF2CDA1017B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='%cured_india' datatype='real' name='[Calculation_841047288879378433]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Cured])/SUM([Confirmed]))*100' />
      </column>
      <column caption='%death_india' datatype='real' name='[Calculation_841047288880009218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Deaths])/SUM([Confirmed]))*100' />
      </column>
      <column caption='% Cured' datatype='real' name='[Calculation_925489782161870848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([Cured])/MAX([Confirmed]))*100' />
      </column>
      <column caption='% Deaths' datatype='real' name='[Calculation_925489782162157569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([Deaths])/MAX([Confirmed]))*100' />
      </column>
      <column caption='Confirmed Foreign National' datatype='string' name='[ConfirmedForeignNational]' role='dimension' type='nominal' />
      <column caption='Confirmed Indian National' datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Himanchal Pradesh&quot;' value='&quot;Himachal Pradesh&quot;' />
          <semantic-value key='&quot;Karanataka&quot;' value='&quot;Karnataka&quot;' />
        </semantic-values>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_2BB741A699984BE0A95FFF2CDA1017B4]' role='measure' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Min' name='[min:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_841047288879378433]' derivation='User' name='[usr:Calculation_841047288879378433:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_841047288880009218]' derivation='User' name='[usr:Calculation_841047288880009218:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_925489782161870848]' derivation='User' name='[usr:Calculation_925489782161870848:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_925489782162157569]' derivation='User' name='[usr:Calculation_925489782162157569:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State/UnionTerritory:nk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#7e507c'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#815380'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#845784'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#875a87'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#8a5d8a'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#8d608d'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#916491'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#956793'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#996a95'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#9d6d97'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#a27099'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#a6739b'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#ab769d'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#b0799f'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#b37ca1'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#b680a4'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#ba84a7'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#bd87aa'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#c08bae'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#c38eb1'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#c792b5'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#c996b8'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#cc9abb'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#cf9ebe'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#d2a1c1'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#d5a5c5'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#d8a9c9'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#dcadcd'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#dfb0d0'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#e2b4d4'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#e5b8d8'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#e8bcdb'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#eac0de'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#ecc4e1'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_841047288879378433:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Cured:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_925489782161870848:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_841047288880009218:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[min:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_925489782162157569:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_india.csv' id='covid_19_india.csv_2BB741A699984BE0A95FFF2CDA1017B4'>
            <properties context=''>
              <relation connection='textscan.1xbjx7n1gg5ghj18w9at100c8czs' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Time' ordinal='2' />
                  <column datatype='string' name='State/UnionTerritory' ordinal='3' />
                  <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
                  <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
                  <column datatype='integer' name='Cured' ordinal='6' />
                  <column datatype='integer' name='Deaths' ordinal='7' />
                  <column datatype='integer' name='Confirmed' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='covid_vaccine_statewise' inline='true' name='federated.1ty104z013vz0o13tcefw06nt4sk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_vaccine_statewise' name='textscan.1nl6p521vjk9d2162397w0zfhsa4'>
            <connection class='textscan' directory='C:/Users/hp/Desktop/Mini project' filename='covid_vaccine_statewise.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1nl6p521vjk9d2162397w0zfhsa4' name='covid_vaccine_statewise.csv' table='[covid_vaccine_statewise#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Updated On' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='Total Doses Administered' ordinal='2' />
            <column datatype='real' name='Sessions' ordinal='3' />
            <column datatype='real' name='Sites ' ordinal='4' />
            <column datatype='real' name='First Dose Administered' ordinal='5' />
            <column datatype='real' name='Second Dose Administered' ordinal='6' />
            <column datatype='real' name='Male (Doses Administered)' ordinal='7' />
            <column datatype='real' name='Female (Doses Administered)' ordinal='8' />
            <column datatype='real' name='Transgender (Doses Administered)' ordinal='9' />
            <column datatype='real' name='Covaxin (Doses Administered)' ordinal='10' />
            <column datatype='real' name='CoviShield (Doses Administered)' ordinal='11' />
            <column datatype='real' name='Sputnik V (Doses Administered)' ordinal='12' />
            <column datatype='real' name='AEFI' ordinal='13' />
            <column datatype='real' name='18-44 Years (Doses Administered)' ordinal='14' />
            <column datatype='real' name='45-60 Years (Doses Administered)' ordinal='15' />
            <column datatype='real' name='60+ Years (Doses Administered)' ordinal='16' />
            <column datatype='real' name='18-44 Years(Individuals Vaccinated)' ordinal='17' />
            <column datatype='real' name='45-60 Years(Individuals Vaccinated)' ordinal='18' />
            <column datatype='real' name='60+ Years(Individuals Vaccinated)' ordinal='19' />
            <column datatype='real' name='Male(Individuals Vaccinated)' ordinal='20' />
            <column datatype='real' name='Female(Individuals Vaccinated)' ordinal='21' />
            <column datatype='real' name='Transgender(Individuals Vaccinated)' ordinal='22' />
            <column datatype='real' name='Total Individuals Vaccinated' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1nl6p521vjk9d2162397w0zfhsa4' name='covid_vaccine_statewise.csv' table='[covid_vaccine_statewise#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Updated On' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='Total Doses Administered' ordinal='2' />
            <column datatype='real' name='Sessions' ordinal='3' />
            <column datatype='real' name='Sites ' ordinal='4' />
            <column datatype='real' name='First Dose Administered' ordinal='5' />
            <column datatype='real' name='Second Dose Administered' ordinal='6' />
            <column datatype='real' name='Male (Doses Administered)' ordinal='7' />
            <column datatype='real' name='Female (Doses Administered)' ordinal='8' />
            <column datatype='real' name='Transgender (Doses Administered)' ordinal='9' />
            <column datatype='real' name='Covaxin (Doses Administered)' ordinal='10' />
            <column datatype='real' name='CoviShield (Doses Administered)' ordinal='11' />
            <column datatype='real' name='Sputnik V (Doses Administered)' ordinal='12' />
            <column datatype='real' name='AEFI' ordinal='13' />
            <column datatype='real' name='18-44 Years (Doses Administered)' ordinal='14' />
            <column datatype='real' name='45-60 Years (Doses Administered)' ordinal='15' />
            <column datatype='real' name='60+ Years (Doses Administered)' ordinal='16' />
            <column datatype='real' name='18-44 Years(Individuals Vaccinated)' ordinal='17' />
            <column datatype='real' name='45-60 Years(Individuals Vaccinated)' ordinal='18' />
            <column datatype='real' name='60+ Years(Individuals Vaccinated)' ordinal='19' />
            <column datatype='real' name='Male(Individuals Vaccinated)' ordinal='20' />
            <column datatype='real' name='Female(Individuals Vaccinated)' ordinal='21' />
            <column datatype='real' name='Transgender(Individuals Vaccinated)' ordinal='22' />
            <column datatype='real' name='Total Individuals Vaccinated' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Updated On</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Updated On]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Updated On</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Doses Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Doses Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Doses Administered</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sessions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sessions]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Sessions</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sites </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sites ]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Sites </remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Dose Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[First Dose Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>First Dose Administered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Second Dose Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Second Dose Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Second Dose Administered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Male (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Male (Doses Administered)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Female (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Female (Doses Administered)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transgender (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transgender (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Transgender (Doses Administered)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Covaxin (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Covaxin (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Covaxin (Doses Administered)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CoviShield (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CoviShield (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>CoviShield (Doses Administered)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sputnik V (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sputnik V (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Sputnik V (Doses Administered)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AEFI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AEFI]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>AEFI</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>18-44 Years (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[18-44 Years (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>18-44 Years (Doses Administered)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>45-60 Years (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[45-60 Years (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>45-60 Years (Doses Administered)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>60+ Years (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[60+ Years (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>60+ Years (Doses Administered)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>18-44 Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[18-44 Years(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>18-44 Years(Individuals Vaccinated)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>45-60 Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[45-60 Years(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>45-60 Years(Individuals Vaccinated)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>60+ Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[60+ Years(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>60+ Years(Individuals Vaccinated)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Male(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Male(Individuals Vaccinated)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Female(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Female(Individuals Vaccinated)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transgender(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transgender(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Transgender(Individuals Vaccinated)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Individuals Vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Individuals Vaccinated]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Individuals Vaccinated</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[18-44 Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
      <column datatype='real' name='[45-60 Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
      <column datatype='real' name='[60+ Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
      <column caption='Aefi' datatype='real' name='[AEFI]' role='measure' type='quantitative' />
      <column datatype='real' name='[Covaxin (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CoviShield (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Female (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Female(Individuals Vaccinated)]' role='measure' type='quantitative' />
      <column datatype='real' name='[First Dose Administered]' role='measure' type='quantitative' />
      <column datatype='real' name='[Male (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Male(Individuals Vaccinated)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Second Dose Administered]' role='measure' type='quantitative' />
      <column caption='Sites' datatype='real' name='[Sites ]' role='measure' type='quantitative' />
      <column datatype='real' name='[Sputnik V (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;India&quot;' value='21.0' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;India&quot;' value='78.0' />
        </semantic-values>
      </column>
      <column datatype='real' name='[Transgender (Doses Administered)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_vaccine_statewise.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF]' role='measure' type='quantitative' />
      <column-instance column='[18-44 Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:18-44 Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
      <column-instance column='[45-60 Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:45-60 Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
      <column-instance column='[60+ Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:60+ Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AEFI]' derivation='Sum' name='[sum:AEFI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Covaxin (Doses Administered)]' derivation='Sum' name='[sum:Covaxin (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CoviShield (Doses Administered)]' derivation='Sum' name='[sum:CoviShield (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Female (Doses Administered)]' derivation='Sum' name='[sum:Female (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Female(Individuals Vaccinated)]' derivation='Sum' name='[sum:Female(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
      <column-instance column='[First Dose Administered]' derivation='Sum' name='[sum:First Dose Administered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Male (Doses Administered)]' derivation='Sum' name='[sum:Male (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Male(Individuals Vaccinated)]' derivation='Sum' name='[sum:Male(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Second Dose Administered]' derivation='Sum' name='[sum:Second Dose Administered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sputnik V (Doses Administered)]' derivation='Sum' name='[sum:Sputnik V (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Transgender (Doses Administered)]' derivation='Sum' name='[sum:Transgender (Doses Administered):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Covaxin (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:First Dose Administered:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:60+ Years(Individuals Vaccinated):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Transgender (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:45-60 Years(Individuals Vaccinated):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Male (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Male(Individuals Vaccinated):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Sputnik V (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:18-44 Years(Individuals Vaccinated):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:AEFI:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:CoviShield (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Second Dose Administered:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Female (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Female(Individuals Vaccinated):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_vaccine_statewise.csv' id='covid_vaccine_statewise.csv_B07465E013624E3097FEF9FCBFB8B4CF'>
            <properties context=''>
              <relation connection='textscan.1nl6p521vjk9d2162397w0zfhsa4' name='covid_vaccine_statewise.csv' table='[covid_vaccine_statewise#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Updated On' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='real' name='Total Doses Administered' ordinal='2' />
                  <column datatype='real' name='Sessions' ordinal='3' />
                  <column datatype='real' name='Sites ' ordinal='4' />
                  <column datatype='real' name='First Dose Administered' ordinal='5' />
                  <column datatype='real' name='Second Dose Administered' ordinal='6' />
                  <column datatype='real' name='Male (Doses Administered)' ordinal='7' />
                  <column datatype='real' name='Female (Doses Administered)' ordinal='8' />
                  <column datatype='real' name='Transgender (Doses Administered)' ordinal='9' />
                  <column datatype='real' name='Covaxin (Doses Administered)' ordinal='10' />
                  <column datatype='real' name='CoviShield (Doses Administered)' ordinal='11' />
                  <column datatype='real' name='Sputnik V (Doses Administered)' ordinal='12' />
                  <column datatype='real' name='AEFI' ordinal='13' />
                  <column datatype='real' name='18-44 Years (Doses Administered)' ordinal='14' />
                  <column datatype='real' name='45-60 Years (Doses Administered)' ordinal='15' />
                  <column datatype='real' name='60+ Years (Doses Administered)' ordinal='16' />
                  <column datatype='real' name='18-44 Years(Individuals Vaccinated)' ordinal='17' />
                  <column datatype='real' name='45-60 Years(Individuals Vaccinated)' ordinal='18' />
                  <column datatype='real' name='60+ Years(Individuals Vaccinated)' ordinal='19' />
                  <column datatype='real' name='Male(Individuals Vaccinated)' ordinal='20' />
                  <column datatype='real' name='Female(Individuals Vaccinated)' ordinal='21' />
                  <column datatype='real' name='Transgender(Individuals Vaccinated)' ordinal='22' />
                  <column datatype='real' name='Total Individuals Vaccinated' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_E289DDBC172D40BC83D24D4ECE1A66F2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Gender wise vaccinated analysis' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Gender wise vaccinated analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Comparision of death vs cured of chosen state'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1hvdnk305f550c13jz6ij02zpy2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1hvdnk305f550c13jz6ij02zpy2v'>
            <column caption='% Cured' datatype='real' name='[Calculation_925489782161870848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([Cured])/MAX([Confirmed]))*100' />
            </column>
            <column caption='% Deaths' datatype='real' name='[Calculation_925489782162157569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([Deaths])/MAX([Confirmed]))*100' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Himanchal Pradesh&quot;' value='&quot;Himachal Pradesh&quot;' />
                <semantic-value key='&quot;Karanataka&quot;' value='&quot;Karnataka&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_925489782161870848]' derivation='User' name='[usr:Calculation_925489782161870848:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_925489782162157569]' derivation='User' name='[usr:Calculation_925489782162157569:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Jammu and Kashmir&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_925489782162157569:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_925489782161870848:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State/UnionTerritory:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hvdnk305f550c13jz6ij02zpy2v].[twk:Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Cured:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_925489782161870848:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_925489782162157569:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State/UnionTerritory:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hvdnk305f550c13jz6ij02zpy2v].[twk:Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Deaths:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_925489782162157569:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_925489782161870848:qk] + ([federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_925489782162157569:qk] + [federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]))</rows>
        <cols>([federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk] * [federated.1hvdnk305f550c13jz6ij02zpy2v].[twk:Date:qk])</cols>
      </table>
      <simple-id uuid='{B9E31B89-6527-4E93-8418-EB7342361A05}' />
    </worksheet>
    <worksheet name='Covid 19 India'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Covid 19 India&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1hvdnk305f550c13jz6ij02zpy2v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hvdnk305f550c13jz6ij02zpy2v'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Himanchal Pradesh&quot;' value='&quot;Himachal Pradesh&quot;' />
                <semantic-value key='&quot;Karanataka&quot;' value='&quot;Karnataka&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1hvdnk305f550c13jz6ij02zpy2v].[Longitude (generated)]</column>
            <column>[federated.1hvdnk305f550c13jz6ij02zpy2v].[Latitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' />
              <lod column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' />
              <color column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]' />
              <geometry column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hvdnk305f550c13jz6ij02zpy2v].[Latitude (generated)]</rows>
        <cols>[federated.1hvdnk305f550c13jz6ij02zpy2v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0FD13DAD-28E8-44EB-A9E7-42F00B570012}' />
    </worksheet>
    <worksheet name='Different vaccine types analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_vaccine_statewise' name='federated.1ty104z013vz0o13tcefw06nt4sk' />
          </datasources>
          <datasource-dependencies datasource='federated.1ty104z013vz0o13tcefw06nt4sk'>
            <column caption='Aefi' datatype='real' name='[AEFI]' role='measure' type='quantitative' />
            <column datatype='real' name='[Covaxin (Doses Administered)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CoviShield (Doses Administered)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sputnik V (Doses Administered)]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;India&quot;' value='21.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;India&quot;' value='78.0' />
              </semantic-values>
            </column>
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[AEFI]' derivation='Sum' name='[sum:AEFI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Covaxin (Doses Administered)]' derivation='Sum' name='[sum:Covaxin (Doses Administered):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CoviShield (Doses Administered)]' derivation='Sum' name='[sum:CoviShield (Doses Administered):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sputnik V (Doses Administered)]' derivation='Sum' name='[sum:Sputnik V (Doses Administered):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:CoviShield (Doses Administered):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Covaxin (Doses Administered):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Sputnik V (Doses Administered):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:AEFI:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:CoviShield (Doses Administered):qk]&quot;</bucket>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Covaxin (Doses Administered):qk]&quot;</bucket>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Sputnik V (Doses Administered):qk]&quot;</bucket>
              <bucket>&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:AEFI:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Andaman and Nicobar Islands&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]</column>
            <column>[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='19' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ty104z013vz0o13tcefw06nt4sk].[Multiple Values]</rows>
        <cols>([federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk] / [federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{1C9459B8-8898-4876-B8FD-7A704C86ED07}' />
    </worksheet>
    <worksheet name='Dose analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_vaccine_statewise' name='federated.1ty104z013vz0o13tcefw06nt4sk' />
          </datasources>
          <datasource-dependencies datasource='federated.1ty104z013vz0o13tcefw06nt4sk'>
            <column datatype='real' name='[First Dose Administered]' role='measure' type='quantitative' />
            <column datatype='real' name='[Second Dose Administered]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;India&quot;' value='21.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;India&quot;' value='78.0' />
              </semantic-values>
            </column>
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[First Dose Administered]' derivation='Sum' name='[sum:First Dose Administered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Second Dose Administered]' derivation='Sum' name='[sum:Second Dose Administered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:First Dose Administered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Second Dose Administered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Andaman and Nicobar Islands&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]</column>
            <column>[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ty104z013vz0o13tcefw06nt4sk].[Multiple Values]</rows>
        <cols>([federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk] / [federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{802B0C80-E1E9-4380-B3C3-0185711BE105}' />
    </worksheet>
    <worksheet name='Gender wise vaccinated analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_vaccine_statewise' name='federated.1ty104z013vz0o13tcefw06nt4sk' />
          </datasources>
          <datasource-dependencies datasource='federated.1ty104z013vz0o13tcefw06nt4sk'>
            <column datatype='real' name='[Female (Doses Administered)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Male (Doses Administered)]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;India&quot;' value='21.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;India&quot;' value='78.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Transgender (Doses Administered)]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Female (Doses Administered)]' derivation='Sum' name='[sum:Female (Doses Administered):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Male (Doses Administered)]' derivation='Sum' name='[sum:Male (Doses Administered):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Transgender (Doses Administered)]' derivation='Sum' name='[sum:Transgender (Doses Administered):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Female (Doses Administered):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Male (Doses Administered):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Transgender (Doses Administered):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Andaman and Nicobar Islands&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]</column>
            <column>[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ty104z013vz0o13tcefw06nt4sk].[Multiple Values]</rows>
        <cols>([federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk] / [federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{C1FE057E-AC82-44EF-BDCE-DEAA592F1E33}' />
    </worksheet>
    <worksheet name='Percentage compararision of death vs cured'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1hvdnk305f550c13jz6ij02zpy2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1hvdnk305f550c13jz6ij02zpy2v'>
            <column caption='%cured_india' datatype='real' name='[Calculation_841047288879378433]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Cured])/SUM([Confirmed]))*100' />
            </column>
            <column caption='%death_india' datatype='real' name='[Calculation_841047288880009218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Deaths])/SUM([Confirmed]))*100' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_841047288879378433]' derivation='User' name='[usr:Calculation_841047288879378433:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_841047288880009218]' derivation='User' name='[usr:Calculation_841047288880009218:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[wk:Date:ok]' filter-group='3'>
            <groupfilter from='1' function='range' level='[wk:Date:ok]' to='53' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hvdnk305f550c13jz6ij02zpy2v].[wk:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_841047288880009218:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hvdnk305f550c13jz6ij02zpy2v].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_841047288879378433:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hvdnk305f550c13jz6ij02zpy2v].[twk:Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>%cured_india:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_841047288879378433:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_841047288880009218:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hvdnk305f550c13jz6ij02zpy2v].[twk:Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>%death_india:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_841047288880009218:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_841047288879378433:qk] + ([federated.1hvdnk305f550c13jz6ij02zpy2v].[usr:Calculation_841047288880009218:qk] + [federated.1hvdnk305f550c13jz6ij02zpy2v].[sum:Confirmed:qk]))</rows>
        <cols>[federated.1hvdnk305f550c13jz6ij02zpy2v].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{93A9B055-6086-4B29-ADD2-DFC3018A50CF}' />
    </worksheet>
    <worksheet name='Percentage distribution of conformed cases of each state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage distribution of conformed cases of each state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1hvdnk305f550c13jz6ij02zpy2v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hvdnk305f550c13jz6ij02zpy2v'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Himanchal Pradesh&quot;' value='&quot;Himachal Pradesh&quot;' />
                <semantic-value key='&quot;Karanataka&quot;' value='&quot;Karnataka&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[pcto:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:Date:qk]' included-values='in-range'>
            <min>#2021-08-11#</min>
            <max>#2021-08-11#</max>
          </filter>
          <slices>
            <column>[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' />
              <size column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[sum:Confirmed:qk]' />
              <wedge-size column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[pcto:sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B50F4C45-A171-4E3F-8A2F-1B67BA9000CB}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1hvdnk305f550c13jz6ij02zpy2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1hvdnk305f550c13jz6ij02zpy2v'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[sum:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[wk:Date:ok]' filter-group='3'>
            <groupfilter from='1' function='range' level='[wk:Date:ok]' to='53' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hvdnk305f550c13jz6ij02zpy2v].[wk:Date:ok]</column>
            <column>[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]</rows>
        <cols>[federated.1hvdnk305f550c13jz6ij02zpy2v].[twk:Date:ok]</cols>
      </table>
      <simple-id uuid='{FAEB3D61-34B2-411E-B119-577D10D23B25}' />
    </worksheet>
    <worksheet name='Stat wise no. of conformed cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1hvdnk305f550c13jz6ij02zpy2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1hvdnk305f550c13jz6ij02zpy2v'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Himanchal Pradesh&quot;' value='&quot;Himachal Pradesh&quot;' />
                <semantic-value key='&quot;Karanataka&quot;' value='&quot;Karnataka&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]</rows>
        <cols>[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{6C0DB97B-9950-4207-94D7-BCB47973E38A}' />
    </worksheet>
    <worksheet name='Statastic of Chosen State'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1hvdnk305f550c13jz6ij02zpy2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1hvdnk305f550c13jz6ij02zpy2v'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Himanchal Pradesh&quot;' value='&quot;Himachal Pradesh&quot;' />
                <semantic-value key='&quot;Karanataka&quot;' value='&quot;Karnataka&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Jammu and Kashmir&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]</column>
            <column>[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hvdnk305f550c13jz6ij02zpy2v].[Multiple Values]</rows>
        <cols>([federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk] / [federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{4A4B426E-6D97-4ED6-92E3-5774B41E99A5}' />
    </worksheet>
    <worksheet name='State wise comparision of total vs positive'>
      <table>
        <view>
          <datasources>
            <datasource caption='StatewiseTestingDetails' name='federated.1w6c0650bqyz7819syd5d0lmrkxk' />
          </datasources>
          <datasource-dependencies datasource='federated.1w6c0650bqyz7819syd5d0lmrkxk'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Samples' datatype='real' name='[TotalSamples]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalSamples]' derivation='Sum' name='[sum:TotalSamples:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:Positive:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk]</column>
            <column>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:Positive:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:TotalSamples:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1w6c0650bqyz7819syd5d0lmrkxk].[twk:Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Samples:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:TotalSamples:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:Positive:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:Positive:qk] + [federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:TotalSamples:qk])</rows>
        <cols>([federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk] * [federated.1w6c0650bqyz7819syd5d0lmrkxk].[twk:Date:qk])</cols>
      </table>
      <simple-id uuid='{D1F962BB-F994-4495-AC15-6728186B35EB}' />
    </worksheet>
    <worksheet name='State wise testing analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='StatewiseTestingDetails' name='federated.1w6c0650bqyz7819syd5d0lmrkxk' />
          </datasources>
          <datasource-dependencies datasource='federated.1w6c0650bqyz7819syd5d0lmrkxk'>
            <column caption='% positive ' datatype='real' name='[Calculation_925489782184370179]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Positive])/SUM([TotalSamples]))*100' />
            </column>
            <column datatype='real' name='[Positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Samples' datatype='real' name='[TotalSamples]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalSamples]' derivation='Sum' name='[sum:TotalSamples:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_925489782184370179]' derivation='User' name='[usr:Calculation_925489782184370179:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:TotalSamples:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:Positive:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:TotalSamples:qk]&quot;</bucket>
              <bucket>&quot;[federated.1w6c0650bqyz7819syd5d0lmrkxk].[sum:Positive:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk]</column>
            <column>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[:Measure Names]' value='38' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[:Measure Names]' />
              <text column='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[usr:Calculation_925489782184370179:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[Multiple Values]</rows>
        <cols>([federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk] / [federated.1w6c0650bqyz7819syd5d0lmrkxk].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A9B20242-CAEF-4E2C-8F37-8F5780873E46}' />
    </worksheet>
    <worksheet name='Statewise vaccinated people'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_vaccine_statewise' name='federated.1ty104z013vz0o13tcefw06nt4sk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ty104z013vz0o13tcefw06nt4sk'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;India&quot;' value='21.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;India&quot;' value='78.0' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Total Individuals Vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Individuals Vaccinated]' derivation='Sum' name='[sum:Total Individuals Vaccinated:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Total Individuals Vaccinated:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' />
              <lod column='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' />
              <color column='[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Total Individuals Vaccinated:qk]' />
              <geometry column='[federated.1ty104z013vz0o13tcefw06nt4sk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ty104z013vz0o13tcefw06nt4sk].[Latitude (generated)]</rows>
        <cols>[federated.1ty104z013vz0o13tcefw06nt4sk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{23E941BF-2E47-4F72-A589-CC7E7F2404A5}' />
    </worksheet>
    <worksheet name='Year wise vaccinated analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_vaccine_statewise' name='federated.1ty104z013vz0o13tcefw06nt4sk' />
          </datasources>
          <datasource-dependencies datasource='federated.1ty104z013vz0o13tcefw06nt4sk'>
            <column datatype='real' name='[18-44 Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
            <column datatype='real' name='[45-60 Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
            <column datatype='real' name='[60+ Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;India&quot;' value='21.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;India&quot;' value='78.0' />
              </semantic-values>
            </column>
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[18-44 Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:18-44 Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
            <column-instance column='[45-60 Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:45-60 Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
            <column-instance column='[60+ Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:60+ Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:18-44 Years(Individuals Vaccinated):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:45-60 Years(Individuals Vaccinated):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:60+ Years(Individuals Vaccinated):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Andaman and Nicobar Islands&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]</column>
            <column>[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ty104z013vz0o13tcefw06nt4sk].[Multiple Values]</rows>
        <cols>([federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk] / [federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{8C6D1CEE-6126-4FE2-8FA5-C2A3BED47DE6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid 19 Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89843' id='19' param='horz' type-v2='layout-flow' w='98828' x='586' y='9115'>
            <zone h='89843' id='15' param='vert' type-v2='layout-flow' w='96485' x='586' y='9115'>
              <zone h='89843' id='12' param='horz' type-v2='layout-flow' w='96485' x='586' y='9115'>
                <zone h='89843' id='10' type-v2='layout-basic' w='96485' x='586' y='9115' />
              </zone>
            </zone>
            <zone fixed-size='32' h='89843' id='18' is-fixed='true' param='vert' type-v2='layout-flow' w='2343' x='97071' y='9115' />
          </zone>
          <zone fixed-size='51' h='8073' id='16' is-fixed='true' type-v2='title' w='98828' x='586' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='91146' id='3' name='Covid 19 India' w='46266' x='73' y='8073' />
        <zone h='7943' id='8' name='Covid 19 India' pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]' type-v2='color' w='22767' x='23353' y='91016' />
        <zone h='48958' id='9' name='Percentage distribution of conformed cases of each state' w='51611' x='47511' y='9375' />
        <zone h='30859' id='13' name='Percentage distribution of conformed cases of each state' pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' type-v2='color' w='8638' x='89824' y='15234' />
        <zone h='48047' id='17' name='Percentage compararision of death vs cured' w='52123' x='47291' y='51563' />
        <zone h='7943' id='20' name='Percentage compararision of death vs cured' pane-specification-id='2' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' type-v2='color' w='8492' x='90922' y='50000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='24'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='33' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='51' h='8073' id='16' type-v2='title' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91146' id='3' is-fixed='true' name='Covid 19 India' w='46266' x='73' y='8073'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7943' id='8' name='Covid 19 India' pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]' type-v2='color' w='22767' x='23353' y='91016'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='9' is-fixed='true' name='Percentage distribution of conformed cases of each state' w='51611' x='47511' y='9375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='30859' id='13' name='Percentage distribution of conformed cases of each state' pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' type-v2='color' w='8638' x='89824' y='15234'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48047' id='17' is-fixed='true' name='Percentage compararision of death vs cured' w='52123' x='47291' y='51563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7943' id='20' name='Percentage compararision of death vs cured' pane-specification-id='2' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' type-v2='color' w='8492' x='90922' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2446F1C2-4AC9-486F-952C-218B2082553E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid 19 India - State wise Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='covid_19_india' name='federated.1hvdnk305f550c13jz6ij02zpy2v' />
      </datasources>
      <datasource-dependencies datasource='federated.1hvdnk305f550c13jz6ij02zpy2v'>
        <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Himanchal Pradesh&quot;' value='&quot;Himachal Pradesh&quot;' />
            <semantic-value key='&quot;Karanataka&quot;' value='&quot;Karnataka&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='19' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='8203' id='20' type-v2='title' w='98828' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='89713' id='17' param='vert' type-v2='layout-flow' w='98828' x='586' y='9245'>
              <zone h='89713' id='10' param='horz' type-v2='layout-flow' w='98828' x='586' y='9245'>
                <zone h='89713' id='7' param='horz' type-v2='layout-flow' w='87115' x='586' y='9245'>
                  <zone h='89713' id='5' type-v2='layout-basic' w='87115' x='586' y='9245' />
                </zone>
                <zone fixed-size='160' h='89713' id='9' is-fixed='true' param='vert' type-v2='layout-flow' w='11713' x='87701' y='9245' />
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='45703' id='8' name='Stat wise no. of conformed cases' w='99195' x='659' y='53906' />
        <zone h='43620' id='12' name='Statastic of Chosen State' w='47877' x='0' y='11458' />
        <zone h='44401' id='15' name='Comparision of death vs cured of chosen state' w='50586' x='48975' y='12370' />
        <zone h='11458' id='11' name='Stat wise no. of conformed cases' pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]' type-v2='color' w='25915' x='72182' y='60547' />
        <zone h='7943' id='13' mode='dropdown' name='Statastic of Chosen State' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' type-v2='filter' w='12299' x='35652' y='14844' />
        <zone h='11068' id='14' name='Statastic of Chosen State' pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' type-v2='color' w='10249' x='36750' y='23698' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='24'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='33' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='8203' id='20' type-v2='title' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7943' id='13' mode='dropdown' name='Statastic of Chosen State' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' type-v2='filter' w='12299' x='35652' y='14844'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43620' id='12' is-fixed='true' name='Statastic of Chosen State' w='47877' x='0' y='11458'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11068' id='14' name='Statastic of Chosen State' pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' type-v2='color' w='10249' x='36750' y='23698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44401' id='15' is-fixed='true' name='Comparision of death vs cured of chosen state' w='50586' x='48975' y='12370'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45703' id='8' is-fixed='true' name='Stat wise no. of conformed cases' w='99195' x='659' y='53906'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11458' id='11' name='Stat wise no. of conformed cases' pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]' type-v2='color' w='25915' x='72182' y='60547'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F9596494-858A-4C72-AAE0-12E8F90680BC}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid 19 Vaccine analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='covid_vaccine_statewise' name='federated.1ty104z013vz0o13tcefw06nt4sk' />
      </datasources>
      <datasource-dependencies datasource='federated.1ty104z013vz0o13tcefw06nt4sk'>
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[Geographical].[Latitude]'>
            <semantic-value key='&quot;India&quot;' value='21.0' />
          </semantic-values>
          <semantic-values semantic-role='[Geographical].[Longitude]'>
            <semantic-value key='&quot;India&quot;' value='78.0' />
          </semantic-values>
        </column>
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='16' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='8203' id='17' type-v2='title' w='98828' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='89713' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='9245'>
              <zone h='89713' id='5' type-v2='layout-basic' w='87115' x='586' y='9245' />
              <zone fixed-size='160' h='89713' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11713' x='87701' y='9245' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='90885' id='3' name='Statewise vaccinated people' w='45681' x='-73' y='8984' />
        <zone h='42188' id='9' name='Different vaccine types analysis' w='24378' x='75329' y='11068' />
        <zone h='44141' id='12' name='Gender wise vaccinated analysis' w='26647' x='73206' y='55469' />
        <zone h='42188' id='13' name='Year wise vaccinated analysis' w='29429' x='45681' y='10807' />
        <zone h='45443' id='14' name='Dose analysis' w='26428' x='45608' y='54036'>
          <layout-cache type-h='fixed' type-w='cell' />
        </zone>
        <zone h='7292' id='8' name='Statewise vaccinated people' pane-specification-id='0' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Total Individuals Vaccinated:qk]' type-v2='color' w='16618' x='24890' y='16406' />
        <zone h='6380' id='10' mode='dropdown' name='Different vaccine types analysis' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' type-v2='filter' w='26354' x='73280' y='1953' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='24'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='24' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='8203' id='17' type-v2='title' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='90885' id='3' is-fixed='true' name='Statewise vaccinated people' w='45681' x='-73' y='8984'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7292' id='8' name='Statewise vaccinated people' pane-specification-id='0' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Total Individuals Vaccinated:qk]' type-v2='color' w='16618' x='24890' y='16406'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42188' id='13' is-fixed='true' name='Year wise vaccinated analysis' w='29429' x='45681' y='10807'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6380' id='10' mode='dropdown' name='Different vaccine types analysis' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' type-v2='filter' w='26354' x='73280' y='1953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42188' id='9' is-fixed='true' name='Different vaccine types analysis' w='24378' x='75329' y='11068'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45443' id='14' is-fixed='true' name='Dose analysis' w='26428' x='45608' y='54036'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44141' id='12' is-fixed='true' name='Gender wise vaccinated analysis' w='26647' x='73206' y='55469'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CC5B29C8-82E4-412E-BA0C-CBA0AAF882AB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='State wise testing analysis Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='StatewiseTestingDetails' name='federated.1w6c0650bqyz7819syd5d0lmrkxk' />
      </datasources>
      <datasource-dependencies datasource='federated.1w6c0650bqyz7819syd5d0lmrkxk'>
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='12' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='8203' id='13' type-v2='title' w='98828' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='89713' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='9245'>
              <zone h='89713' id='5' type-v2='layout-basic' w='87115' x='586' y='9245' />
              <zone fixed-size='160' h='89713' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11713' x='87701' y='9245' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='33250' id='3' name='State wise testing analysis' w='75500' x='500' y='14625' />
        <zone h='47875' id='10' name='State wise comparision of total vs positive' w='100000' x='-100' y='52375' />
        <zone h='11625' id='8' mode='dropdown' name='State wise testing analysis' param='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk]' type-v2='filter' w='23400' x='76700' y='36750' />
        <zone h='7943' id='9' name='State wise testing analysis' pane-specification-id='2' param='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[:Measure Names]' type-v2='color' w='13982' x='80527' y='20052' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='24'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='20' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='8203' id='13' type-v2='title' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11625' id='8' mode='dropdown' name='State wise testing analysis' param='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk]' type-v2='filter' w='23400' x='76700' y='36750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='33250' id='3' is-fixed='true' name='State wise testing analysis' w='75500' x='500' y='14625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7943' id='9' name='State wise testing analysis' pane-specification-id='2' param='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[:Measure Names]' type-v2='color' w='13982' x='80527' y='20052'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47875' id='10' is-fixed='true' name='State wise comparision of total vs positive' w='100000' x='-100' y='52375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{207B0425-92F0-4F6D-B430-331B1C62D608}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='89'>
    <window class='worksheet' name='Covid 19 India'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{88867987-6183-432A-AF4F-40D58A076AC6}' />
    </window>
    <window class='worksheet' name='Percentage distribution of conformed cases of each state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='16' type='pages' />
            <card size='28' type='filters' />
            <card size='107' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{4777331E-06CE-4D49-97FB-768B595E6A21}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E08F1446-9A71-4D86-ABBB-87191E238402}' />
    </window>
    <window class='worksheet' name='Percentage compararision of death vs cured'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{AD0C2B93-8EBC-4942-8ADD-7434A7625654}' />
    </window>
    <window class='dashboard' name='Covid 19 Analysis'>
      <viewpoints>
        <viewpoint name='Covid 19 India'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Percentage compararision of death vs cured'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Percentage distribution of conformed cases of each state'>
          <zoom type='entire-view' />
          <highlight field='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{68E7D434-75F2-496E-B9C1-8542B75DA503}' />
    </window>
    <window class='worksheet' name='Stat wise no. of conformed cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hvdnk305f550c13jz6ij02zpy2v].[max:Confirmed:qk]</field>
            <field>[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{660A0CD2-AD5C-4812-82CC-97B062F8C977}' />
    </window>
    <window class='worksheet' name='Statastic of Chosen State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]</field>
            <field>[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDBED598-883C-43FC-955E-5911954D051A}' />
    </window>
    <window class='worksheet' name='Comparision of death vs cured of chosen state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hvdnk305f550c13jz6ij02zpy2v].[none:State/UnionTerritory:nk]</field>
            <field>[federated.1hvdnk305f550c13jz6ij02zpy2v].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3050D235-D1E2-4E6B-BAF3-AB97E7A8DE22}' />
    </window>
    <window class='dashboard' name='Covid 19 India - State wise Analysis'>
      <viewpoints>
        <viewpoint name='Comparision of death vs cured of chosen state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stat wise no. of conformed cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Statastic of Chosen State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1hvdnk305f550c13jz6ij02zpy2v].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{79422C3F-9E2A-4310-A631-F6388A5CFEBA}' />
    </window>
    <window class='worksheet' name='State wise testing analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1w6c0650bqyz7819syd5d0lmrkxk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[:Measure Names]</field>
            <field>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[md:Date:ok]</field>
            <field>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:Date:qk]</field>
            <field>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk]</field>
            <field>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[wk:Date:ok]</field>
            <field>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F08D93BD-6D02-43A1-87F9-04CA0DCE52E3}' />
    </window>
    <window class='worksheet' name='State wise comparision of total vs positive'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[none:State:nk]</field>
            <field>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00EE1F3C-6F74-4B37-85C6-AB738CE03734}' />
    </window>
    <window class='dashboard' name='State wise testing analysis Dashboard'>
      <viewpoints>
        <viewpoint name='State wise comparision of total vs positive'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State wise testing analysis'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1w6c0650bqyz7819syd5d0lmrkxk].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5A6B3BE1-8738-468A-BD79-8C7DB856C225}' />
    </window>
    <window class='worksheet' name='Statewise vaccinated people'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[sum:Total Individuals Vaccinated:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1F041B3-3D22-473D-8B48-153C4AAF22CB}' />
    </window>
    <window class='worksheet' name='Different vaccine types analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]</field>
            <field>[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F5D7356-2520-4C1D-B311-8C075F0AF9F8}' />
    </window>
    <window class='worksheet' name='Gender wise vaccinated analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB11EA90-C1E1-45C9-BFAE-665302A104C5}' />
    </window>
    <window class='worksheet' name='Year wise vaccinated analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]</field>
            <field>[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4825F6BF-0AD3-491F-B5DE-87E3071FAF2C}' />
    </window>
    <window class='worksheet' name='Dose analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]</field>
            <field>[federated.1ty104z013vz0o13tcefw06nt4sk].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BBE2729-B950-4963-AA2F-A0448216994F}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid 19 Vaccine analysis'>
      <viewpoints>
        <viewpoint name='Different vaccine types analysis'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ty104z013vz0o13tcefw06nt4sk].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Dose analysis'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Gender wise vaccinated analysis'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Statewise vaccinated people'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Year wise vaccinated analysis'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3C33B2A4-8D6B-4C4A-BBE8-00DE3CADC592}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Comparision of death vs cured of chosen state' width='192'>
      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
      m9RWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Covid 19 Analysis' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Covid 19 India' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Covid 19 India - State wise Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Covid 19 Vaccine analysis' width='192'>
      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
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpv0X
      sHRlGNjgQ0cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Different vaccine types analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dose analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gender wise vaccinated analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAPSElEQVR4nO3deWwc133A8e/M7OzJ5bG8D4nUYUmURSqmLOuwrEixGlmOnNR15TSo2yJt
      g6BBExdFgAYFArRw/yhgo2iBJkXSJq2FIknt1Edky7VkXXZ02KIki7ol6iZFLSnee3J35vUP
      Mj4oKXYQUbvc9/v8R+7T8L3VfmdnlrtDQymlEEJDhmEYZq4nIUQuSQBCaxKA0JoEILQmAQit
      aRPAuXPncj0FkYe0CcBxnFxPQeQhbQIQ4lY8uZ6A+C0pl7HECDcGYziAxw5QGikjYMu+7dOQ
      AKY1l1jPSV578SU6BsBrgW35mLvuKb68rB4GO9nRMcLi5W1U+H7NZrIpLp86Sl+gicWzq9Gp
      HQlgWktwavcveONqDc8+8+dU+hxifZc4H/OP39y1n+/9xzn+tvUTAhiLcXjrT3mv9vdpbpIA
      xLSRJRFPkLFDBAwHZdiEq+/hM9UQPbqVH/7gRaKXUjz3118jXLOSv/vuJjLHd/Gzl3dwccSg
      Ze0mvrJxOad/8gybdx1j1HuNb+57kfs3/Blf3biAnndf4T9f2E00BfWLHuFrX32U2pAHI9fL
      vpOUJk6dOpXrKUwBR/Ud36aeefpP1d8897x64+2D6kJvTLmuO35zx2b1+FPfVQcHJoZnEurK
      2ePqTNegip7err79jb9SW97vUU68T730j0+r7zz/joplxofGzryqnv7mP6j3uuMqk+xTW579
      C/Wd/zqkEjlZ59QAeQaY5kwqFq7lL79dx779hzn79its37qVdX/8LTY0l9483OOjrNjmxM4X
      OXL2MteGEowkkijCkwaO0XnoEBf6o2x//l94C4hfGebG0EWGaCNwN5Z2l0gA05lSKCxK6hey
      4Yn5JEcGaP/p3/OjH29j8bNPUjdpeGYkymubf8jJ8Eo2bVyI8fOXb7PhDIlYCl9dG7/35MPY
      AHwZf6iciild0N2n0elOAXKSdJ8/y7mufhws/MEA4VAIhTF+nB4M4s8mGI2lcV2XdDLGpcEU
      n1mylKowpNMTvxw0TXwBm/RonKzj4roBGuc34u8+T4+nnJmzZjGztgLbHaPQfp0ozwDTmcpw
      48Ih3jh0Fb/PBjfF9d4gm/5wNZUADQ/w+fl72PJv/8TR+ffzlS+10jozwraf/4DYoiaGU+74
      drxFND+wlL0v7OD73+uk5cGNrGvbyO+u/Hf+95+f42BDBcFgiKYFK1ldV4k/l2u+w4xfnQwU
      utOnT7NgwYJcT+POUopMapS+vhuMxFMow4M/XE5DXQTbMABFvL+b7t4RHG8Zs5uqcEZv0BMd
      IFheizkWw1NcSaTIizuWoO/6dQYTWYorGqipCOHE++nu7iOZVXj8ISqraygJeQvmsMEwDEMC
      ENqSj0QK7UkAQmsSgNCaBCC0JgEIrUkABUCpAd788X/TGfsN/lFqkEP7d3KyJ4WTHGb/7jc4
      2TUyZXPMV/KLsIKgcB2H3+gFbQWu66JQWIESVqzZMGWzy2cSQAG6enQbPaqG3lPtdMW93Lvi
      YZYtrMVrKDIjPbTvfZvjV0dQoQoenA1OaoSTJzoINy2lKWIxcOU4v9x7mO7hNOG6e1m9+gFm
      lPkL623QEySAAtR3voP2rJf1ax9nxdg19h55j66aR5npH2L/zl3Eapey6T6bQx0nAVBOhhu9
      11A1LjiQTBvMXfUYayM+oicOcPToScoevI+wXXgJSAAFKFBSwdLmNcypAeJZKsp7yToOsdFe
      0p5GlrfNozQ7SHHoFh8Ts2wi1dUMnTvH4QtjpIf66DX8ZDIKCjAAOQnWiEMK0xMhaN9+TDY9
      yrEDe7g47BIIhSgKBshmxt9NWojkGUAjlvKQikUZTM2jMpsmNZYlOGlMJjXMaLyUti+soMaj
      GLrocPFkPCfzvRskAI2ESxupDJ9h746dVAcdLlwbJTLp/YGWHcBj9HL47b2UBgxGrp2hLzMj
      NxO+C+TdoAVAqTTd565SPGsuxTYM9XSSLZlLRRDIpujtH8RXXEWJ3yQ10svFi5dxAlWUhm1C
      pdWU2Fmi0R78kRnjD/roZS5c7iVjF1FTHSGrDOqqq/EX2OUi5O3QQmvydmihvdueA1y5coVC
      enJIp9Ncvnw519MQeea2AVRWVt7NeUy5eDxOVVVVrqch8sxtAwgECunqL2CaZsGtSfz25BxA
      aE0CEFqTAITWJAChNQlAaE0CEFqTAITWJAChNQlAaE0CEFqTAITWJAChNQlAaE0CEFrLiw/F
      K6XIpuPE0oqioiJs68Prz2SSI4zEkjjYhEtLCUx8LjWTGGJgND0xysDjDVAUDuH1mAV5BTMx
      NXIfgJthsOsch9rbOTlSxONf3MjMiHf8tnQf+954k0sxFwNFyYwlrHlwESVeiB5+lc2HszSU
      jl/kxjD91Lc8wEOLGj8WkBC/Ts4DSEYv0HGxl6KKGVSaiY/corhxYhdXgm186QvzCbsDvLP1
      Td6/PIPV95RgBUpY8jufY31zMcrNMnz+XX529CJL5zdgWzlflpgmcn4O4Kto4oFlK7mveSZh
      30f33MOcOZqlZdV8Sn0WVqCS+S0NxC90kZy0DaXAMD3YBXbZDjH1cr6rNG0fQRvSN13bPsVw
      poTG4IdR+PyleLNxMoCbSXL19BHeHfGTSY7QP5CidfEygr7xJTmO87EP9SulyGQyU78gMa3k
      PIBPYkz+6lffUIrsWJp02kDhIVTkIxlP4LgKa+IcYPJVLQrpKhfizsjjAHyErREGUlA/cQHL
      sfQwY2YZNmB6g8xqXc7qiXOAVP85tuzspH9OHbUhL5ZlYVnWB1szDAOv15ubpYi8lccBlDC/
      1WD73k4aPzuXkDvEueNXCCxsJQAMTxrtOBmyjqvFS6CD17sY7rue0zkEi0upapyb0zncCTkO
      IEv0zBHeO36BWGyYy9FBon3DVFbVsGTlWhpa1lKzZTtbXjqCR2XwVixizaxSDMBJjtBx8BcM
      ddiAIusoSmYvIeLL46bvkM7D++jYvTWnc2i8t411f/KtnM7hTsjxo8WkpHY2bcEqsi6snPiu
      5fUTCQB2Nas2PEr/UIwsXiKVlRRNHMVULd7AkzPGXzY1DAPLF6KsrBTbkleCxKeX8wD8xeXU
      F5ffdoSvKEJdUeSm73vDlTSGp3JuQgeyuxRakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhN
      AhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQA
      oTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBakwCE1iQAoTUJQGhNAhBa
      kwCE1iQAobX8/rPqSjGWTpDOuGCY+ANBbMsAwBlLEE9lJwYamB4bv9+LZZoYuZuxmGbyOABF
      InqKHXvaiQ4ncVyDhsWfY/X9cwnb0PPu//CjA3Fqim0APIEy7lmyghXNDdimJCA+nfwNIDNA
      +64jFC15hPVzK2C0mzdf/T+OVFfz0OwwVrCM5RufYH1zMcrNMHhuPy8c6+S+ObXY/vxdlsgv
      +XsOkOzngjmDFXMr8Zom3pIZtC6spq+zi9TksYaF3x/CY+ViomI6y99dpTdIJBnlfH+CBRUh
      DHcM1xPAGB1lDFDZNNcvnuJYNshYfIDu7kEWtSwn4Btfkuu6KKU+2JxSimw2e5sfNr24rpvr
      KRTM/Zm/AfirWba0gl3bt3LKZ2HZXqzMCGOUAKCcLCM3rtNt+kCBvziMymZQrgLLQCl10wPF
      cZxcrOSO+2jYuZxDIdyf+RsANtULV/H5yHWGkhkMy0si2kHnUBgfkPCFmLd07fg5gJMh3nuG
      1985y6ymamqCXizLwrI+PCYyDAOfz5e75dxBH11XrpimWRD3Z/6eAwCpeBx/eR2zZjVSW+oh
      2jVA/cJZ+CcPNE1Mj4HKOuTBzlFMI3n8DACj105w4FQ/ylBk00lCjQ+xqH784e+mYpw8uo2x
      Th8oh1QyhX/mYiK+vF6SyDN5/Wgpm3kvi61eklmFHSilrr4K/8RL/OUL17KhfHT8C8PADpRQ
      VVWB18rrJzWRZ/I6AI+/lJlzSm95m7+sngVld3lCouDI7lJoTQIQWpMAhNYkAKE1CUBoTQIQ
      WpMAhNYkAKE1CUBoTQIQWsvrt0LcFYePQSKZ61nAklYI3PQ+VzHFJIBLV2FoJNezgNZmCSAH
      5BBIaE0CEFqTAITWJAChNQlAaE0CEFqTAITWJAChNQlAaE0CEFqTAITWJAChNQlAaE0CEFqT
      AITWJAChNQlAaE0CEFqTAITWJAChNQlAaE0CEFqTAITWJAChNQlAaE0CEFqTAITW8vjaoArl
      puh462XeOdFD2gjSuuaLrG6tw2saRNtfYvPO8xgGGKaHyMwW1qxdQVN5ENMwcj15MU3kcQAZ
      Lmz7Ce3mcp76xh8Qdm6wa8srvJV5jPVLa1GGyeLHvs765mJcJ033kR28trudP3psFUU+K9eT
      F9NEHh8CJYn2QMv9zZT6TKxgFc33NpEZGCQzaaRp+aipr8cysrium5PZiukpjwMoYl5rhGO/
      PMpg2sVJRDlxrIvy2fX4Jo1MDffQfvgsFdV1+Lx5/KQm8k4eP1pMSuatYlHfdjb/61uMGX5a
      Vj9KS30IA8jG+tnz+vfpCFhYdhGzWpbSNr8ez8ThfyaTwXGcD7bmui6JROKmn+JXKi/2Aslk
      EuX5dIdumUx2imfzyRzHueX9Od3kbwDZYY7u3sNw0xq+vq4Gr0pyfO923nvfYdWyeXiKyvns
      pk2sby7GGUvQc/Yge955nw2PriTi92DbNrZtf7A50zQJBoM3/5w8OWEOBAJwq/ndgm3n/r/N
      sqxb35/TTD7s/G5trJ+zVz0sXFiL32Ni2iEaZjeQvt5F3Pn4UMsbpGHObIKpJPGsc+vtCXEL
      ud+V3E6gjrY5+9jx+gGWt9TiUwlOHDiGZ97DlNrQ52QYjHZxORhCuWP0nu9gsKiOiJwDiN9A
      /j5ajAAL1j0BB/dx6vBBMoafxrZHWDyvFtuAQFkd5qXjvNsLhmESrGhk/UOLCNryEqj49PI3
      AAAryILl61hwi5vK7nmQJ++56zMSBSZ/zwGEuAskAKE1CUBoTQIQWpMAhNYkAKE1CUBoTQIQ
      WpMAhNYkAKE1CUBoTQIQWpMAhNYkAKE1CUBoTQIQWpMAhNYkAKE1CUBoTQIQWpMAhNYkAKE1
      CUBoTQIQWpMAhNYkAKE1CUBoTQIQWpMAhNb+H/xYiIWIfYdgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Percentage compararision of death vs cured' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage distribution of conformed cases of each state' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAASYUlEQVR4nO2dyZMcx3WHf5lZNd2zYTYOQCwkQIiEwMWkKVF2iFRYlsJyOMIHRUihi/QP
      +Oij/wPffNBBB9+8yLItK0SKQYdCgSABgRAogSBNAFw0BAc7BsvMYAazdXdVZvpQy1RXV3VX
      9YrqfF8EMZie2sB5X+XLl1lZTGutQRCGwgd9AQQxSEgAwmhIAMJoSADCaEgAwmhIAMJoSADC
      aEgAwmhIAMJoSADCaEgAwmhIAMJoSADCaEgAwmhIAMJoSADCaEgAwmhIAMJoSADCaEgAwmhI
      AMJoSADCaEgAwmhIAMJoSADCaEgAwmhIAMJoSADCaEgAwmhIAMJoSADCaEgAwmhIAMJoSADC
      aEgAwmhIAMJoSADCaEgAwmhIAMJoSADCaEgAwmhIAMJoSADCaEgAwmhIAMJoSADCaEgAwmhI
      AMJorEFfADF8KKVQ2aqgsrmDWqUGp+pASomDTxwAYwA4A7M4mOBggoExNrBrJQGIttFa4+HK
      Q9y5soSlxSXcvX4Hq7dXsHZvDU7NgXQllFTh9n//D38HaP8bBoAxcIuDlyyIMQtizIY1PgIx
      PgJu9Sc5IQGIXFR3qrhycRGfn1/AlYuLWL2zCunKbDvr2N+1hqpJqJqEu1Hd/RlnsMZs2DNl
      2NOjsCZGwHhvWgkSgGiJW3OweGERF09fwOUPL2NzbaO3J1Qa7mYN7mYNOzcego8I2HOjKM2P
      ezJ0MWUiAYhU1u+v44MT53Hx9EWsLC0P7DpUTaK6tInq0ibEuI3S3nGU9k50JU0iAYgGlm8v
      43evn8Gldy/BrbnQWns5u5/CMMa8zwaAs15BdWUL/IsVjB6awtihKXBbtH08EoAIebjyEL/9
      +Sl8dOojSGc3r2eMgYNDaRV8AAxAAK112KlWNYmtxVVs31jH+OFpjB2aAhP5WwQSgIBbc/H7
      t97Du798F9XtaspWgytVBmilG8TTjsTGwjK2bqxhz5fnUXpsPFcfgQQwnJt/vIG3/vkt3L12
      t+l2jLEw9WGMAX1Og7TW0LKx2qS1hlIKaquG1Q9uobxvAlPH90KU7UzHJQEMRToSp3/xW5x5
      /UzmMiZjHFrL4Jv+pkFaey1Aw8f1n1XubqL2YAdTz+/D6N7JloclAQxkfXkdr//4l7j2ybVc
      +w0yCYoOqAXoFClUTeLBh7dRe3Iak8fmwZv0DUgAw7j+6XX84p/+BxsP2qjlM+a3AspLh/rU
      CniBniBAQvBH91n/4j62VzYw/9XDsEaTUyKaDGcQn579FD/7x5+1F/w+0Q5mv+bwaKnqR5Hh
      S5Ein1ctklBSorqyhaXTn6O6vpO4LQlgAho4/5vz+NVPfgW35naUywSd4X4RLX2Gn8GbcJe6
      j1KQrht+L3cc3D3zBSrLmw3bkgBDjtYaZ988ixP/egJaaXDOwUX7A0fA7p0/qAb1FN1Y+oTS
      DS1C+COl4EaCP/zckbj73hXs3K9v/UiAIef9X7+PU/99KkwXGGMQXHQoQSQN6mnXWEO5sbu/
      X/ZM3Fpr786flhpJhXu/v4qdSEtAAgwxF05dwNs/fbvhbskYgxACnLf3669Lg3oY/1qhofPb
      LO+XrpvYWa7bTirc/8MVVNe8PgEJMKRcvXQVJ/7lRGrAMMbAhQBrWwIeHiczOQtGScGfXPnx
      B8MSBsqSUI7CvT8swtmukgDDyOrSKt78yZuQrmx6l+ecQwjRVqc2mv/3olMcVHLqPkspeyql
      6zq9rZBSYnttC7d/d5kEGDZqlRre+PEbqGxWAPh3+iYSMMYgLKutVGY3Dcq4c57GQtWXPtPK
      nlprSMfJNB6htYbrumEnubK6RQIME1prvPPTd7B8q37ufjMJgnxeiPwShB3gbrcAWnu1/whJ
      HV8v73cyzUkKgl/GWhUSYIhYOLeAC6cuJP6slQReOpRvYkAgD0N306B4rq8Typ67g13NO73B
      to7jJEpEAgwJOxs7OPFvJ5puEwR6UrAGP8tbHg06w91sBaJBnVb2jA92pR5LKThOeitBc4GG
      hJP/eRLb69stt4sGfzwogvIo0Dj62i90LP1Jitu8wd8MagGGgFsLt3Dp3UuZtw9bgoSVFoL+
      QNZVGJg/Qa5bo8I6dvdPKoW6rtsy75dStgx+gAQoPFppnPyvk7lr7ADAGU/sF4QSZAxo1qVy
      aHzeTzzIswx2xSs9rSABCs7C+QXc/vx22/undY4Zz14e7dYEuegjj0mDXq0Gu9IqPc0gAQqM
      Vhpn3zjb8XGSJGCIlEczHqPTNCj6yGNS8MsmKU2zSk8zSIACs3hhEfev3+/KsRIlCMqjVhYJ
      gjSovfNH7/jxQa9wsCsFpRRqTq2tZ5RJgAJz7n/PdfV4SWXSrOXRoDPc7uy46KzP6F3cC/70
      Tq+SfqWnzQfTqAxaUJZvLePGZze6ftykMmnW8mi4ckTOc0ZXfIgPeikpoVTCahAAlOvCzZHv
      J0EtQEG5eOpiz44djvDy+pagVXk06APk7RAHVZ34oJeSMrHeH1SDOgt+L80iAQqIlBIfn/m4
      p+dgjIGzxnTIsuymAc5zdoS13q39x/P+pFJmO5We+P5aKSjpVZQoBSogNz+7iZ2N5Ie8uw3n
      vO7OHMwedVOfvMqZBmkFrXRDJ9h1ao2rwPmVnnY6u0HHWivl7a81lNYkQBFZeH+hr+cLOsKB
      BJxxWJYFN6EyE6ZPGVeOC/oU0eD3Brsay6BZRnbjxAM/PrpMAhQMrTW++PCLvp+3TgLmjRMI
      y0rM0RnjAFMt5+gH836iZc+kwS4pZeaR3bpjB0Gv6s8RhQQoGGt317Cx2uMXVKQQlSD4uxYi
      cXQ2SxoU5P5ByxIf7NJaQ0qZOd+PShQN/maQAAXj+qfXB3r+MPD9YBNCNATa7gQ51XLxKi8f
      D/L++uB3XTfTyG5DmqPSzxuHBCgYyzeXvbuwblwtrV/Eq0BBfyAadOG0iDQBlNfpVX4K5EYe
      a8za2Y0GfnDXzwsJUDCWLi/B8qcmBAGgIpWUfuEFOPwRKcCybThODdG3yHDOIdPW8Anu/vBb
      gnAsQMFpMvLrbVMf9O1WhQASoFC4josHdx40TD8WEOEvNChZBmL0spUIJswp5gWvZdl1aUxa
      KxBeo98CBB3pZpWeuvxeytz/tuj/n+hXEqBArN9bT10aJCpFMKktTBGClqLNu2Uron0Cy7bg
      OkHFhoEzBhU7p3KlnwKpUJi0Sk9Ys1cKSsmmK0JHdgrdaLaILkACFIq1e2u5to/P0+9lKxEV
      T1iAdF1/OgUHYpPblFTQUoX9hqRKTyitnx61SomSvmaBBCgQmw8aVzfOQ1orAWBXiA5aifhx
      lZT+mMBuGqSVH/x+hSde6QnyexnpF8TpJODjkAAFYvth64fe8xL2IyLTneMpU6s0In48zjls
      24bjHyOaBimp4LoOpOuGlR7vR7tr+tfNCcLu7NA815EVEqBAVLYqfTlPkDq120oEUlm2DadW
      A+MC8PeRNRdO1YHrOrvH8wM/eq5u3N1T99e+WCABCoVTyT8Xphs0ayXiLUV0H845RkolVKsV
      SNcb+a1VKnCcmjfVORb4TYM9ErSpn4df6r9PPBxVgYqH9tMJIPglR17fnjwxs9V0nLaJdrCD
      0WBgt4MdnT06MlKCdF3sbG5hZ3sLruM2ShNmOro+kCPpTx1NhKj/Vtf/jNVvQwIUCCUVePhA
      SvxrNjpJKRr2jH7A/PhiHFqL8Mq8IFco2RYuf7KA0dFy8PSw92fD5cfeO6DrP85D4nMLsX8E
      CVAgmr3uMyudLF/C/P+CP+LvyNhdJxTgnMG2BCzOUbIFbMGhHBcOrzVdRqXVS/jyvKRPBxcX
      3PkTIAEKhGV39m6vNKJxxLy5zrvB7H0Yfl+/H4t9D4wIgZItMGKJSGvlIf0Kj9Y6dY3S+FNh
      2a4/2prstoysLt1JfpkTCVAgRkZLufcJgiIM5PDz4LPGnwU/z3r8aNAzlr5v3fO+SqVKkJfd
      /gfQtOcbkTisVHV8dqJvjE2OAkDjcuRB8EZ/wZE/4qlK9LN24AywwqDn4BkfhFf+hL1g2+C5
      AsZZj1+25xObIgGQAIVifHoCtiX8IIo06m3evfPAGYMlOEoWr0tv8p5LKdVQToVCmGb1GxKg
      QEzOTEAw5t2C+wBnDLbgsP2gF20GfZS4AABa9gt6CQlQICbnp9pdeC0z0aC3BYfgvGlenw/d
      dFyim/2CrJAABWJidgLCtiCdfA+It0JwBos3Bj3Qg7SkRWUn7Be0scBWO5AABYJzjtkDs7h/
      7V7HxxLcy+ltwWEJDsFY23l9ZnTyy+4aNos/WtlDSICCMffkfNsC1AU9Z/6dnnUxxWlNMAWi
      5SBWn/oFtDRiwXj86P7M2zJ4QV+yBSbKNibKNsZLNsq2BdsSEIKD8/6kGlHyTMfo1VNsAdQC
      FIx9TzcXgAEQwsvphX+n54xBRAJ9EOXGKN6cpuz33l72C0iAgjE+NY7ZA3NYvb0SfsYYIDiH
      4Ay2/5X7gd/vFCcLed/iAvSuX0ACFJDDf/oU1pZWwTkLc3nBvbt8XdDHR8gGTBDC7QgA9KZf
      QH2AAnLkxacwPjqCsRELZdvyR2e9ag737/7huj2PFPVPlrVLN/sFJEABmd4/i9nHp3dLmIKH
      d8VHKdVpIPpsSocBHDx00+lxSIACwhjD4a88Ay7YQKo43aDdNChKuCpeBxKQAAXl0MtHW764
      7lGm2bvGcqE7S4lIgIJSnhzD/ucPD/oy2qYbLUD8eEqp3Gt8kQAF5uirzw36EtqmFwNceZdG
      B0iAQjN9cA57nzk46Mtom16M8ObtF5AABefYt196BMudTYjEZbfToOg5srYwJEDBmT70WKH6
      AtF1enomQOT4XmuQvg0JMAQ8+9dfhejRihG9pNcCAP6baJqkRCTAEDA2M4Gnv/nioC8jN8Hr
      kXpNs/VMSYAh4UuvPYc9j88M+jJy08/XOiVJQAIMCdwSeOl7r3Vl9bh+0o80KH6+qAjF+r9F
      NGVq/yyOf+flQV9GLvotAFC/sjUJMGQ89fXn8PizTw76MtKJZTyDEADwJQAJMHQwzvDS918r
      TH+g3693jbL3+CESYBixSzZe+eG3UJoYHfSlNBBf078Xrz3Kwp6Dc3jmOy+TAMPK2MwEXvnR
      X8Iq24O+lJa084b3Thibm8QL3/1zCFuQAMPMzKF5fO1H34YYebSffO1nP2B0Zhx/8v1XYY95
      K22TAEPO3JF9+NoPv/VIS9AvAUZnJvDiD76B8p6x8DOmB9UDIfrKg+v3ce4/3kGtT2+aTINx
      1rAkCmMM5dFyT59sm9g7hRe+9/WGfhEJYBCby+s49+9vY2tlY2DXkCQAAIyOlb2XaveA2af2
      4fjfvgK7PNJ4PSSAWVQ3d/DBz09jZfHOQM6fJkCpVIKwujyhjwEHX/4Sjn7zhdQRchLAQJQr
      8ce3/w+LZz6BVv399acJYNs27JHuVaysko2n/+ol7Dt+KOlVlLvXQwKYy73Pb+HiG+9hZ32r
      b+dME0AIgVI5/zvQkthzcA7H/+YrGJ2ZaH09JIDZ1Lar+Ow3H+DGh5f70hqkCdCNjrAYsXDk
      1Wdx4OWjmScFkgAEAGDl6l18+uv3sXZrpfXGHZAmANBBR5gxzB87gKN/8TzKU+P5diUBiAAl
      FW5fvIrPT37Us0oRYyz17lwqlxreH9b8YN4joUe+8RymDsw2zfVTD0ECEHGkK3H74lUsnvkY
      G3fXunrsZgLYIzZsu3VHmHGG6Sfn8cSfHcP0E491lDaRAEQqWiksL97BtXMLuLdwC8qVHR+z
      mQCtOsL26Ajmv3wI+186gon5qY6vBSABiIxUNrZx55MbWLp0FQ9uLrctQzMBkjrCVsnGzJG9
      mD92ELNP7ev6lA4SgMhNdXMHK1fuYnlxCavX7mH7wWZmIRhD6pqmXHBMTE9ibHYSU4fmMHN4
      Lyb3z8Lq4TwmEoDoDA1UtyvYvL+OjXtr2Fp5iJ0Hm6hs7KC6VYFbqUHL3TU7ueCwbAtWeQSl
      iTLKe8YwNjOB8bk9mNw7jfG5PX2duEcCED1Faw0tFZQ/xsAFe6RWtSYBCKOh5wEIoyEBCKMh
      AQijIQEIoyEBCKMhAQijIQEIoyEBCKMhAQijIQEIoyEBCKMhAQijIQEIoyEBCKMhAQijIQEI
      oyEBCKMhAQijIQEIoyEBCKMhAQijIQEIoyEBCKMhAQijIQEIoyEBCKMhAQijIQEIoyEBCKMh
      AQijIQEIoyEBCKMhAQijIQEIoyEBCKMhAQijIQEIoyEBCKMhAQijIQEIoyEBCKMhAQijIQEI
      oyEBCKMhAQij+X8Uuflpk9zMXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='127' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB/CAYAAAC5QM2nAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAS20lEQVR4nO3de1RVdd7H8fc8gmNgjAleGBsdFa8QTcO2ARIUKUyQAcM8KqaGYyqOmSSY
      FyQzQ9PAIi3t0fFY6GBDI96RRDkqMnIYWYQ31HygDFFxek5CDh4enz/OQbmIHLl4mf19reVa
      rr332b+9z/p99v7tze93fr+4efPmTYRQqf960AcgxIMkARCqJgEQqiYBEKomARCqJgEQqiYB
      EKomARCqJgEQqiYBEKomARCqJgEQqiYBEKomARCqJgEQqiYBEKomARCqJgEQqiYBEKomARCq
      JgEQqiYBEKomARCqJgEQqiYBEKomARCqJgEQqiYBEKomARCqJgEQqiYBEKomARCqJgEQqiYB
      EKomARCqJgEQqiYBEKomARCqJgEQqiYBEKomARCqJgEQqiYBEKomARCqJgEQqiYBEKomARCq
      JgEQqiYBEKomARCqJgEQqiYBeOB0xCgKodrCB30gLcjI1VPbiQ8fiY+HgqIoeAWHE59ejLHW
      dsXp8YQHe6EoCoqXH2ELkzlR1nJHJgEQLe8fywmavInrw94mKUOPPkvHxgmPsT1qIvE5tyNQ
      mDiJl+bn4rwgmUy9nqxULREDrvPDjy13aFYtt2shTK63eY5lKZF4tq+qbjZ0HxGE15IMcvMv
      gFs3KEtl1ccFeEanMl2xM2/miEtgKC4teGxyB3jolHEieSFhAT54KAqK4oHPyNlo8wy3tijU
      hqIoMaR9l0Z8eDBeioLiFczC1Eu3ttHFKCihWqo3rGovu6SLJ3y0n+nzioKXXxix1ZslhVpC
      FYUYHWDQERvshRKqJSfpTyjKn0gqqX7cpSRPU/CISqV2i6XN097VKr9ZSTEXACsr0/KyjL2k
      3xhCgJ9dY7+4RpEAPHR+5IerPXn1wxQy9Hr0mSnMc/6GhDdWc7RGgzmLbbvaELh0Cwf1mXw2
      opJdy7Tk3ENJxT/AsAVaUrNMzZK1oyvZFhVNckntLQtJnDGfwx0HMWKwE78d/jJDrHNJO1Bt
      w9IDfJ1tjd9wX2wbKNd4NZPlf15Jrn0QU4K7AFBy8Xtw/AUnE8IZ6eOBoih4+LxSM5AtQALw
      0OnC85Mn4OVkR2uA1h15QfNHHA3fcPJC9e3ceXmKF052rYHWtLe3A8O1Olffu3l69CwCXRyx
      sQKsbOin0eBJLidO19zux5SNHNdsYevad5k/+TnsbX0Z7mdN7rY9t+4mZf/IJNsuiADPu7Wq
      jVzNjOeVoNfZZjWKjzbPxdOclu8Lz0FZKSgRrE89gl6fyZYIRw5ETSQ2s+WeguUZ4CFkyEti
      xcqNHDxZwk83qpb2afZyjMXpJCxey+5vznL159vLA2ptd8U5lA/8HatVFis8A4KwC09hT8EE
      pvQuI2NfBnbD1vBsvTXKwNHlk5j51c/8Yep61kxwpXpjx7atHXQYwDAvJ/Py1vwmMIaZBwax
      MDmDCE//Bu8sjSF3gIdNSTJzpqyk0G2R6Y2JXo8+eUbzV39jDvETo9jTNpQ1qVmmcvRxdSo/
      gJNTjzpXSqtnX0LTtYjU/QVQdogDmV3RBLnVU1gZmYtfJvwrG8at2cTKWpUf4Lc9+sC545yq
      cbG3pW1b4OJlrjTyNBsiAXjQCs9zFmucupvawpzOI/vGECZMUejYugXLvZBPbmlPNFMD6W7T
      mIZAb4I1v6NoRxp5OZkcdByKT+96Ni34ghUppfSZ+g7TXe/8kGs/cDC/I5N9GYZqS0sovgDW
      Tt3p0ogjtIQE4L4ro/j8JSoAY/l5tq/axOmu49BUtZ07/5quHGHf/qsYqcBwNo3YBRv49h5L
      cejoCMUFnDMAFQbOHtSyPa/6Bp3pYn2OfV8XUIGR8mI92tlxpN9DGZ2Gv8yQK8lELtmLsyaY
      +up/4REdRTjj/3y3u+wshGkaOzI+nE/SyXKMVPDd9g9Yn9uVcRpP8x2ogDUv1XyTpYtRUJRQ
      bv0d0fzmSonRWXQOEoD77jo5a8fhqyi4+4ah/b+xrN8wnf5VF+HeY3h7cm8yF/rh7jGU6Ruv
      EhA5kR73WEr/V6IJ7aQjaoiC1/A32PiDK579q21g68usaH/KPh+Lp+LD2MUH+c2brzPkXgqx
      9WVkEJSWOvPC4E71blb47WngOPFBptetNf7dqqhWuEV+yfqxv+TLcF/cFU/Grvs/xq7fwPSq
      LycnhaQiO4ZOGsFdonRPfnHz5s2bzbQvoUInVgUyPn8iqZ+EYN+iJRk5utSPt35awNYlQ+o8
      QzSWvAUSjVZRsJ5lX1QQ9MGLLVz5AWMmO/d7sODL5qv8IHcA0SiFaENDSCh6ksFvxLE0pO5b
      okeFBEComjwEC1Vr8M6l1+vvx3EI8UBIE0iomjSBhKpJAISqSQCEqjU9AMarHEtaSJifl3kQ
      w0jC43VcaviT98ZwlPiwqtFL5r4fuhiUqhFLD4vqo6jE/VWSzDSPuiPh7qaJf78oJGXWayw9
      78a8Nams7W4D5efZ/8HXnMWbjk3beTVlpL47k8R/v8qmzNfoXdVL8j/5hxTEPTKw6/2/8Os/
      v0qfXZZ/qkkBMOz6iKVHHJia/B6BVb2TbLrzQvTkpuz2Dq5w8cINcOp7u/IDeC9Cr1/UzGWJ
      R5Fh1yJWt5tH0sAzvHYPAWhCE6iUtO0Z3BgUysi7dc2r+I602DD8vMwDvF9ZyLaCitvrdTEo
      Sijrjx0jaeErpt+N8fBh6roTpuF9hVpClRASTgM7I8y9CM1NoEItoXfoClt7ELeptaSgaOLY
      sz3W3FzzwOeVeI5e+o60+HCCvRQUxYsx8Ue53SPdSHF6bI3m3WxtHtV7rGPIQzu76vduvAhe
      sIPixn+pojEMu1i0uh3zIjzvedRYEwJwnLxs6OPqfJdCS0ieOYqFp9xYlpKFPmsfq30KiZ0w
      mcQazZdv2b3je5ynrSHtSBZ7o1zRf5LAnlKg2wQS9cnM6AMExJlHLiUy4a79YWsO4m5btfjy
      Gc61e5mVOw6StXcevz+byFsx22gTuJQtB7PYG/Ms/5O4iu3msbdlmbFMfLcI3w9TydLrydgY
      yk3tFObcGjVeSOKMKXx62YflKZno9fvZNMeHDo37QkWjGEhf9hfazYu4Nb74XrTsW6CcjazK
      dmTi/Ok8097KNPA67B2m9jjOui3Vf7+gB8PHB+LiaIMVVrS3bwcYuHatccXWGcRdtcLRneFe
      Tti1Bqv2rrj2AEf34eYB6Fa0d3WlB0aMRoBS9nyeQrtxkYT2s8EKaP2bEUwKcSD760OUAuRs
      Yd1x0/kpHVsDVtg8bvvIdgx7FBnSl/FJm1lENKb208LdoS+cysfAU/SrMVSoG92dwJCbTyFu
      zTawobq6g7gb4zQncuFc9iiU1bVW9bnGNeBafu4dzk/cNwYdH3zWjrc+v/emT5Um1BFnXAfA
      zrzjlNGtRUbsN9adBnHfOyPGG9AzfAtJYXcejyUvoR6sC9vXsfPMcXa6J9VZF6IkmJrMi7zv
      uo8m1BN7Bj4/AOvYRP5W6H/HNnmXvi7YcYSTBeB96ypZwMlvwM7DpUWu/s2nJ72dYWdmNiVh
      PbjTgD+HDp2BS1wuhZYfESJq6xKqRR9aa2GhltB58F7iBIvqV5OeATqFvMUbTxfx6fR5bD9f
      jhGoMJwlbfFnZAK4jWf6gGI2LFnFsatGMJZzcv0SNhQ7M2lUfT+h8bDoQqBmENa5K4lapedS
      BUAFhrMHWZOwgwuA7aAgAuyyWbtsO99VABWX0O/LkrdAj5AmPgR3Q7MmhdUvV5A4ZSjuisKg
      oLf4e9s+OAHQiZAPt/BO3xzmBLmjuPsSvr8bc7WfEfpwX/4BsPNfxlfv/5FWKbPw91RQPIYy
      5r002ihupjuCrTfzP43kqYL3GeGp4DXqfY4/0UveAj1CpDu0UDXpDCdUTQIgVE0CIFRNAiBU
      rcG/A5SXl9+P4xDigZA7gFA1CYBQNQmAUDUJgFC1pgeg8l/kJb/LtCA/vL298Q0YR8Sqw1xu
      hoNrlMNL8PaeRGLRgzoAcb8Z8hOZP8ZU//zGzCcx39Dwh8yaGIAids55lVmbKwn8aCv7dTr2
      frmE4dfOcK5pOxbCMkVJREbo6PP2Vvbr9rP17T7oIiJJsvAC2KQAGPZ+StxRe8LiYvDvZkMr
      oJVNN4bMmYh7U3YshEUqyfnbZuxnL2d8Hxta0QqbPuNZPtuezX/LodKCPTRpUPz+XYe4MVDD
      iK71bXOYJd7eTKrRHqm1rCiRSd7eLDkMGA6zYowf3pMSMa01kJ84n3EBvqbbW9A0VmRcrHFi
      lRczWDEtCD9vb7x9A5j83/mNPyXxiDlDTlZ/Bg+sOWWG3cDB9M/K4YwFe2hCAE6R/0/o5dwX
      m8bvpJoikiIXkeUwkMCBPbEFipIimbnDnmkbdqPT7Sdp8VOcjJ7Kx8fMESjPYsXUaA45TOGz
      PfvR7fs7caN6NcvRiEdBKZfLO9GhdgW06UCn8sumcdsNeGjGb//vzs2cCtlIkl9nWgFwjC8+
      P4l35Gqe62Ba8oTrRDQD/8pHujxmPvMMpWl/ZedPg4iZ6083G4BWPG73ywd3EuL+6+Rwh8F4
      9jjUP2dfDU24A/TF5fdw5vgpmqOzxK8C5hBzq/IDRSfIq/Mwb4Pfezp2zHwGgFP5/4Tf9qVX
      89yCxCPHng4/HedU7QpYforjP3WwaJRqEwJgj4fP77E+lMTfW+KVY9ee9LaG7Jzceh9m7Dt0
      hpIrFt3qxH+iXri5n+DAoZpXSsOhA5xwd8OSxnCT3gJ1DIog/KnvWB+xiF2F5VQCFT99S/qy
      DWQBYE+HzlBy9jwG87rMxN1Y9pg6gCDNkxi2LubtXYWUVwKV5ZSc2MWKL7IB6PtiEL0M2/h0
      bR7/qoTK8kLSD8hDsHq0wm3kGEpXRLLxdDmVVFJ+eiORK0oZM9LtdmviLpr4DNCVkI+S6PXX
      FcS9HszSf13H+vGuPO0/jbkA9GX0HA1H5kYz3LsNTzh7M37aH+iLjoZvGq3o+9qnrLZdxtJV
      Yby49Aa0eYIeLn6Mmj7QXPxoViz/kah3ZhH0BTzeZxhv+vYCLjTttMSjo6uG5XFGlr0djM+F
      67Tp4sWEuOVo6n0zWVODY4KlO7T4TyZ9gYSqSQCEqkkAhKpJAISqyQ9jCVWTO4BQNQmAUDUJ
      gFA1CYBQtSYFoFAbap610fzPy4+whUmmuQDuGx0xikKoVuZrUStDnpbZwaaZPL2CZ6Ot2424
      Xs1wBwggTq9Hr9eTmRzHi8bPCQ+YhPbbZg6BzMAu7qQwkRnT0+kfm0qWPovU2P6kT59RaxbS
      +jVrE6h1RxdGvbeJaM8CEmavo6A5dy5EHUaObt6Iw9wEwvqZZhi16RdGwlwHNm4+iiWX4BZ4
      BrDDTxOEXdEO0k7cPtC7Tzh9CV18OKPN6xXFC7+wWNKLTadQqA1FCUnANFd2VZMrhho3g39f
      Rq+dzUgfD9Mk2FPXcaKsaqWBvFvrTOWHx6dTfD9baqIFFJB92AXfQbXGBA/yxeVwtkUX4BZ5
      CLZyduUZijl6zNQtueEJp4v5gWEs0JrWZ+nWMrpyG1HRyZQA3SYkok+egWmubL15suxFVJ//
      79u03RS7vcnGtCNk7Y3CVf8JCXvMQ2Vy1vBGQjF+q/eZyk9ZyojrB9BJr+lH3BUulXWmU+0p
      Sm070bnsElcs2EPLvAWybUtbwGg0YtGE0zzN6FlVE2WDlU0/NBpPyD3BaQuL7DF8PIEujthY
      gVV7e9oBhqqZtsuuYcABxy7m8u2ceGHuO2gegXnKRAMcO+JQZ6EDHR0t+3jLDIovM00kbde2
      LZZMOG2PkeL0BBav3c03Z6/y860NAprneNyGEtL5TRYFBLN72Ahe+uMwvF060rp59i4epGLT
      lb7mtewKl4qhuwUfb5kAnDrOMRwJ6WePJRNOG3PimRj1NU/HrCF1WHdsrABdDEpEMx2PrSdz
      t+5j4qlM9m77io+nJRD9qyCWbYrG267hj4uHlQMdbS9SUgY1ZmovK+Gi7Z3uDHW1QBPIwK5N
      X2HoOpwX+kPVhNPnMrMpqecTF/JzKe2pYWqgufK3BCsbHF2eZ8K81Wzd+T5DylNYt10eAh5t
      vRnwXD77MmoNis/YR/5zA+hdz6eqa9YAmCbJnsTizN7MWDHJfAANTzjt0LkL1uf28XVBBRjL
      KdZrmR2XXnPn3Vz4nR1k7UvnqhGoqKDCwuMqTFrIwiQ9xeWm1z4V1/8NgE2bNs1x2uKBseLZ
      MeO5EjuD9SfLMWKk/OR6ZsReYfyYZy1q3jTD9XYnEcpO038fa4+rzyRW7wzhmfa3d23nv4yv
      2ixn/tJZ+P/lZ7B+nE79vBg1eRqdACvfWUQfnkbsWE/WPvYkz770OtGvD+FAVPVy3JiycgYl
      C2Pwc4/C+nENK/dH8gcLjrCL9zB6frKaCR/ncfVn83H6v8+SIEt+OUY81LqFkrDKyDtzh+L+
      /c889uRg/rQqweKJ2GU8gFA16QwnVO3/Ab/FpRHK7L0lAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Stat wise no. of conformed cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Statastic of Chosen State' width='192'>
      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
      7n7T/YjCJgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='State wise comparision of total vs positive' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State wise testing analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State wise testing analysis Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Statewise vaccinated people' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Year wise vaccinated analysis' width='192'>
      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
      tf8PSpatEK41z8cAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
